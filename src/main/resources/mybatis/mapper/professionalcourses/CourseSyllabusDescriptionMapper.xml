<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.uni.professionalcourses.mapper.CourseSyllabusDescriptionMapper" >
  <resultMap id="BaseResultMap" type="edu.uni.professionalcourses.bean.CourseSyllabusDescription" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="university_id" property="universityId" jdbcType="BIGINT" />
    <result column="course_syllabus_id" property="courseSyllabusId" jdbcType="BIGINT" />
    <result column="chapter" property="chapter" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="teaching_hour" property="teachingHour" jdbcType="INTEGER" />
    <result column="assessment_requirement" property="assessmentRequirement" jdbcType="VARCHAR" />
    <result column="course_book_id" property="courseBookId" jdbcType="BIGINT" />
    <result column="instruction" property="instruction" jdbcType="VARCHAR" />
    <result column="datetime" property="datetime" jdbcType="TIMESTAMP" />
    <result column="by_who" property="byWho" jdbcType="BIGINT" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, university_id, course_syllabus_id, chapter, content, teaching_hour, assessment_requirement, 
    course_book_id, instruction, datetime, by_who, deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.uni.professionalcourses.bean.CourseSyllabusDescriptionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_syllabus_description
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from course_syllabus_description
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from course_syllabus_description
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.uni.professionalcourses.bean.CourseSyllabusDescriptionExample" >
    delete from course_syllabus_description
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.uni.professionalcourses.bean.CourseSyllabusDescription" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_syllabus_description (university_id, course_syllabus_id, chapter, 
      content, teaching_hour, assessment_requirement, 
      course_book_id, instruction, datetime, 
      by_who, deleted)
    values (#{universityId,jdbcType=BIGINT}, #{courseSyllabusId,jdbcType=BIGINT}, #{chapter,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{teachingHour,jdbcType=INTEGER}, #{assessmentRequirement,jdbcType=VARCHAR}, 
      #{courseBookId,jdbcType=BIGINT}, #{instruction,jdbcType=VARCHAR}, #{datetime,jdbcType=TIMESTAMP}, 
      #{byWho,jdbcType=BIGINT}, #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="edu.uni.professionalcourses.bean.CourseSyllabusDescription" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_syllabus_description
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="universityId != null" >
        university_id,
      </if>
      <if test="courseSyllabusId != null" >
        course_syllabus_id,
      </if>
      <if test="chapter != null" >
        chapter,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="teachingHour != null" >
        teaching_hour,
      </if>
      <if test="assessmentRequirement != null" >
        assessment_requirement,
      </if>
      <if test="courseBookId != null" >
        course_book_id,
      </if>
      <if test="instruction != null" >
        instruction,
      </if>
      <if test="datetime != null" >
        datetime,
      </if>
      <if test="byWho != null" >
        by_who,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="universityId != null" >
        #{universityId,jdbcType=BIGINT},
      </if>
      <if test="courseSyllabusId != null" >
        #{courseSyllabusId,jdbcType=BIGINT},
      </if>
      <if test="chapter != null" >
        #{chapter,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="teachingHour != null" >
        #{teachingHour,jdbcType=INTEGER},
      </if>
      <if test="assessmentRequirement != null" >
        #{assessmentRequirement,jdbcType=VARCHAR},
      </if>
      <if test="courseBookId != null" >
        #{courseBookId,jdbcType=BIGINT},
      </if>
      <if test="instruction != null" >
        #{instruction,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null" >
        #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.uni.professionalcourses.bean.CourseSyllabusDescriptionExample" resultType="java.lang.Integer" >
    select count(*) from course_syllabus_description
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course_syllabus_description
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.universityId != null" >
        university_id = #{record.universityId,jdbcType=BIGINT},
      </if>
      <if test="record.courseSyllabusId != null" >
        course_syllabus_id = #{record.courseSyllabusId,jdbcType=BIGINT},
      </if>
      <if test="record.chapter != null" >
        chapter = #{record.chapter,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.teachingHour != null" >
        teaching_hour = #{record.teachingHour,jdbcType=INTEGER},
      </if>
      <if test="record.assessmentRequirement != null" >
        assessment_requirement = #{record.assessmentRequirement,jdbcType=VARCHAR},
      </if>
      <if test="record.courseBookId != null" >
        course_book_id = #{record.courseBookId,jdbcType=BIGINT},
      </if>
      <if test="record.instruction != null" >
        instruction = #{record.instruction,jdbcType=VARCHAR},
      </if>
      <if test="record.datetime != null" >
        datetime = #{record.datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.byWho != null" >
        by_who = #{record.byWho,jdbcType=BIGINT},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course_syllabus_description
    set id = #{record.id,jdbcType=BIGINT},
      university_id = #{record.universityId,jdbcType=BIGINT},
      course_syllabus_id = #{record.courseSyllabusId,jdbcType=BIGINT},
      chapter = #{record.chapter,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      teaching_hour = #{record.teachingHour,jdbcType=INTEGER},
      assessment_requirement = #{record.assessmentRequirement,jdbcType=VARCHAR},
      course_book_id = #{record.courseBookId,jdbcType=BIGINT},
      instruction = #{record.instruction,jdbcType=VARCHAR},
      datetime = #{record.datetime,jdbcType=TIMESTAMP},
      by_who = #{record.byWho,jdbcType=BIGINT},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.uni.professionalcourses.bean.CourseSyllabusDescription" >
    update course_syllabus_description
    <set >
      <if test="universityId != null" >
        university_id = #{universityId,jdbcType=BIGINT},
      </if>
      <if test="courseSyllabusId != null" >
        course_syllabus_id = #{courseSyllabusId,jdbcType=BIGINT},
      </if>
      <if test="chapter != null" >
        chapter = #{chapter,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="teachingHour != null" >
        teaching_hour = #{teachingHour,jdbcType=INTEGER},
      </if>
      <if test="assessmentRequirement != null" >
        assessment_requirement = #{assessmentRequirement,jdbcType=VARCHAR},
      </if>
      <if test="courseBookId != null" >
        course_book_id = #{courseBookId,jdbcType=BIGINT},
      </if>
      <if test="instruction != null" >
        instruction = #{instruction,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        datetime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null" >
        by_who = #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.uni.professionalcourses.bean.CourseSyllabusDescription" >
    update course_syllabus_description
    set university_id = #{universityId,jdbcType=BIGINT},
      course_syllabus_id = #{courseSyllabusId,jdbcType=BIGINT},
      chapter = #{chapter,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      teaching_hour = #{teachingHour,jdbcType=INTEGER},
      assessment_requirement = #{assessmentRequirement,jdbcType=VARCHAR},
      course_book_id = #{courseBookId,jdbcType=BIGINT},
      instruction = #{instruction,jdbcType=VARCHAR},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      by_who = #{byWho,jdbcType=BIGINT},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>