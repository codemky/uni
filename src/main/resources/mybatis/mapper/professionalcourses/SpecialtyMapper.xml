<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.uni.professionalcourses.mapper.SpecialtyMapper" >
  <resultMap id="BaseResultMap" type="edu.uni.professionalcourses.bean.Specialty" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="university_id" property="universityId" jdbcType="BIGINT" />
    <result column="department_id" property="departmentId" jdbcType="BIGINT" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="ename" property="ename" jdbcType="VARCHAR" />
    <result column="discipline_category_id" property="disciplineCategoryId" jdbcType="BIGINT" />
    <result column="first_level_discipline_id" property="firstLevelDisciplineId" jdbcType="BIGINT" />
    <result column="second_level_discipline_id" property="secondLevelDisciplineId" jdbcType="BIGINT" />
    <result column="academic_id" property="academicId" jdbcType="BIGINT" />
    <result column="level_name" property="levelName" jdbcType="VARCHAR" />
    <result column="schooling_length" property="schoolingLength" jdbcType="INTEGER" />
    <result column="min_schooling_length" property="minSchoolingLength" jdbcType="INTEGER" />
    <result column="max_schooling_length" property="maxSchoolingLength" jdbcType="INTEGER" />
    <result column="total_credit" property="totalCredit" jdbcType="INTEGER" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="datetime" property="datetime" jdbcType="TIMESTAMP" />
    <result column="by_who" property="byWho" jdbcType="BIGINT" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, university_id, department_id, number, name, ename, discipline_category_id, first_level_discipline_id, 
    second_level_discipline_id, academic_id, level_name, schooling_length, min_schooling_length, 
    max_schooling_length, total_credit, note, datetime, by_who, deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.uni.professionalcourses.bean.SpecialtyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from specialty
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from specialty
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from specialty
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.uni.professionalcourses.bean.SpecialtyExample" >
    delete from specialty
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.uni.professionalcourses.bean.Specialty" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into specialty (university_id, department_id, number, 
      name, ename, discipline_category_id, 
      first_level_discipline_id, second_level_discipline_id, 
      academic_id, level_name, schooling_length, 
      min_schooling_length, max_schooling_length, 
      total_credit, note, datetime, 
      by_who, deleted)
    values (#{universityId,jdbcType=BIGINT}, #{departmentId,jdbcType=BIGINT}, #{number,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{ename,jdbcType=VARCHAR}, #{disciplineCategoryId,jdbcType=BIGINT}, 
      #{firstLevelDisciplineId,jdbcType=BIGINT}, #{secondLevelDisciplineId,jdbcType=BIGINT}, 
      #{academicId,jdbcType=BIGINT}, #{levelName,jdbcType=VARCHAR}, #{schoolingLength,jdbcType=INTEGER}, 
      #{minSchoolingLength,jdbcType=INTEGER}, #{maxSchoolingLength,jdbcType=INTEGER}, 
      #{totalCredit,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, #{datetime,jdbcType=TIMESTAMP}, 
      #{byWho,jdbcType=BIGINT}, #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="edu.uni.professionalcourses.bean.Specialty" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into specialty
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="universityId != null" >
        university_id,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="ename != null" >
        ename,
      </if>
      <if test="disciplineCategoryId != null" >
        discipline_category_id,
      </if>
      <if test="firstLevelDisciplineId != null" >
        first_level_discipline_id,
      </if>
      <if test="secondLevelDisciplineId != null" >
        second_level_discipline_id,
      </if>
      <if test="academicId != null" >
        academic_id,
      </if>
      <if test="levelName != null" >
        level_name,
      </if>
      <if test="schoolingLength != null" >
        schooling_length,
      </if>
      <if test="minSchoolingLength != null" >
        min_schooling_length,
      </if>
      <if test="maxSchoolingLength != null" >
        max_schooling_length,
      </if>
      <if test="totalCredit != null" >
        total_credit,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="datetime != null" >
        datetime,
      </if>
      <if test="byWho != null" >
        by_who,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="universityId != null" >
        #{universityId,jdbcType=BIGINT},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="ename != null" >
        #{ename,jdbcType=VARCHAR},
      </if>
      <if test="disciplineCategoryId != null" >
        #{disciplineCategoryId,jdbcType=BIGINT},
      </if>
      <if test="firstLevelDisciplineId != null" >
        #{firstLevelDisciplineId,jdbcType=BIGINT},
      </if>
      <if test="secondLevelDisciplineId != null" >
        #{secondLevelDisciplineId,jdbcType=BIGINT},
      </if>
      <if test="academicId != null" >
        #{academicId,jdbcType=BIGINT},
      </if>
      <if test="levelName != null" >
        #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="schoolingLength != null" >
        #{schoolingLength,jdbcType=INTEGER},
      </if>
      <if test="minSchoolingLength != null" >
        #{minSchoolingLength,jdbcType=INTEGER},
      </if>
      <if test="maxSchoolingLength != null" >
        #{maxSchoolingLength,jdbcType=INTEGER},
      </if>
      <if test="totalCredit != null" >
        #{totalCredit,jdbcType=INTEGER},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null" >
        #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.uni.professionalcourses.bean.SpecialtyExample" resultType="java.lang.Integer" >
    select count(*) from specialty
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update specialty
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.universityId != null" >
        university_id = #{record.universityId,jdbcType=BIGINT},
      </if>
      <if test="record.departmentId != null" >
        department_id = #{record.departmentId,jdbcType=BIGINT},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.ename != null" >
        ename = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.disciplineCategoryId != null" >
        discipline_category_id = #{record.disciplineCategoryId,jdbcType=BIGINT},
      </if>
      <if test="record.firstLevelDisciplineId != null" >
        first_level_discipline_id = #{record.firstLevelDisciplineId,jdbcType=BIGINT},
      </if>
      <if test="record.secondLevelDisciplineId != null" >
        second_level_discipline_id = #{record.secondLevelDisciplineId,jdbcType=BIGINT},
      </if>
      <if test="record.academicId != null" >
        academic_id = #{record.academicId,jdbcType=BIGINT},
      </if>
      <if test="record.levelName != null" >
        level_name = #{record.levelName,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolingLength != null" >
        schooling_length = #{record.schoolingLength,jdbcType=INTEGER},
      </if>
      <if test="record.minSchoolingLength != null" >
        min_schooling_length = #{record.minSchoolingLength,jdbcType=INTEGER},
      </if>
      <if test="record.maxSchoolingLength != null" >
        max_schooling_length = #{record.maxSchoolingLength,jdbcType=INTEGER},
      </if>
      <if test="record.totalCredit != null" >
        total_credit = #{record.totalCredit,jdbcType=INTEGER},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.datetime != null" >
        datetime = #{record.datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.byWho != null" >
        by_who = #{record.byWho,jdbcType=BIGINT},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update specialty
    set id = #{record.id,jdbcType=BIGINT},
      university_id = #{record.universityId,jdbcType=BIGINT},
      department_id = #{record.departmentId,jdbcType=BIGINT},
      number = #{record.number,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      ename = #{record.ename,jdbcType=VARCHAR},
      discipline_category_id = #{record.disciplineCategoryId,jdbcType=BIGINT},
      first_level_discipline_id = #{record.firstLevelDisciplineId,jdbcType=BIGINT},
      second_level_discipline_id = #{record.secondLevelDisciplineId,jdbcType=BIGINT},
      academic_id = #{record.academicId,jdbcType=BIGINT},
      level_name = #{record.levelName,jdbcType=VARCHAR},
      schooling_length = #{record.schoolingLength,jdbcType=INTEGER},
      min_schooling_length = #{record.minSchoolingLength,jdbcType=INTEGER},
      max_schooling_length = #{record.maxSchoolingLength,jdbcType=INTEGER},
      total_credit = #{record.totalCredit,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR},
      datetime = #{record.datetime,jdbcType=TIMESTAMP},
      by_who = #{record.byWho,jdbcType=BIGINT},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.uni.professionalcourses.bean.Specialty" >
    update specialty
    <set >
      <if test="universityId != null" >
        university_id = #{universityId,jdbcType=BIGINT},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="ename != null" >
        ename = #{ename,jdbcType=VARCHAR},
      </if>
      <if test="disciplineCategoryId != null" >
        discipline_category_id = #{disciplineCategoryId,jdbcType=BIGINT},
      </if>
      <if test="firstLevelDisciplineId != null" >
        first_level_discipline_id = #{firstLevelDisciplineId,jdbcType=BIGINT},
      </if>
      <if test="secondLevelDisciplineId != null" >
        second_level_discipline_id = #{secondLevelDisciplineId,jdbcType=BIGINT},
      </if>
      <if test="academicId != null" >
        academic_id = #{academicId,jdbcType=BIGINT},
      </if>
      <if test="levelName != null" >
        level_name = #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="schoolingLength != null" >
        schooling_length = #{schoolingLength,jdbcType=INTEGER},
      </if>
      <if test="minSchoolingLength != null" >
        min_schooling_length = #{minSchoolingLength,jdbcType=INTEGER},
      </if>
      <if test="maxSchoolingLength != null" >
        max_schooling_length = #{maxSchoolingLength,jdbcType=INTEGER},
      </if>
      <if test="totalCredit != null" >
        total_credit = #{totalCredit,jdbcType=INTEGER},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        datetime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null" >
        by_who = #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.uni.professionalcourses.bean.Specialty" >
    update specialty
    set university_id = #{universityId,jdbcType=BIGINT},
      department_id = #{departmentId,jdbcType=BIGINT},
      number = #{number,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      ename = #{ename,jdbcType=VARCHAR},
      discipline_category_id = #{disciplineCategoryId,jdbcType=BIGINT},
      first_level_discipline_id = #{firstLevelDisciplineId,jdbcType=BIGINT},
      second_level_discipline_id = #{secondLevelDisciplineId,jdbcType=BIGINT},
      academic_id = #{academicId,jdbcType=BIGINT},
      level_name = #{levelName,jdbcType=VARCHAR},
      schooling_length = #{schoolingLength,jdbcType=INTEGER},
      min_schooling_length = #{minSchoolingLength,jdbcType=INTEGER},
      max_schooling_length = #{maxSchoolingLength,jdbcType=INTEGER},
      total_credit = #{totalCredit,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      by_who = #{byWho,jdbcType=BIGINT},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>