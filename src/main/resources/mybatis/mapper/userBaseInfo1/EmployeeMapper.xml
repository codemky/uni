<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.uni.userBaseInfo1.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="edu.uni.userBaseInfo1.bean.Employee" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="university_id" property="universityId" jdbcType="BIGINT" />
    <result column="emp_no" property="empNo" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="BIGINT" />
    <result column="subdepartment_id" property="subdepartmentId" jdbcType="BIGINT" />
    <result column="employ_history_id" property="employHistoryId" jdbcType="BIGINT" />
    <result column="discipline_id" property="disciplineId" jdbcType="BIGINT" />
    <result column="political_id" property="politicalId" jdbcType="BIGINT" />
    <result column="position_id" property="positionId" jdbcType="BIGINT" />
    <result column="home_address_id" property="homeAddressId" jdbcType="BIGINT" />
    <result column="mail_address_id" property="mailAddressId" jdbcType="BIGINT" />
    <result column="datetime" property="datetime" jdbcType="TIMESTAMP" />
    <result column="by_who" property="byWho" jdbcType="BIGINT" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, university_id, emp_no, department_id, subdepartment_id, employ_history_id, 
    discipline_id, political_id, position_id, home_address_id, mail_address_id, datetime, 
    by_who, deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.uni.userBaseInfo1.bean.EmployeeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.uni.userBaseInfo1.bean.EmployeeExample" >
    delete from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.uni.userBaseInfo1.bean.Employee" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employee (user_id, university_id, emp_no, 
      department_id, subdepartment_id, employ_history_id, 
      discipline_id, political_id, position_id, 
      home_address_id, mail_address_id, datetime, 
      by_who, deleted)
    values (#{userId,jdbcType=BIGINT}, #{universityId,jdbcType=BIGINT}, #{empNo,jdbcType=VARCHAR}, 
      #{departmentId,jdbcType=BIGINT}, #{subdepartmentId,jdbcType=BIGINT}, #{employHistoryId,jdbcType=BIGINT}, 
      #{disciplineId,jdbcType=BIGINT}, #{politicalId,jdbcType=BIGINT}, #{positionId,jdbcType=BIGINT}, 
      #{homeAddressId,jdbcType=BIGINT}, #{mailAddressId,jdbcType=BIGINT}, #{datetime,jdbcType=TIMESTAMP}, 
      #{byWho,jdbcType=BIGINT}, #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="edu.uni.userBaseInfo1.bean.Employee" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="universityId != null" >
        university_id,
      </if>
      <if test="empNo != null" >
        emp_no,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="subdepartmentId != null" >
        subdepartment_id,
      </if>
      <if test="employHistoryId != null" >
        employ_history_id,
      </if>
      <if test="disciplineId != null" >
        discipline_id,
      </if>
      <if test="politicalId != null" >
        political_id,
      </if>
      <if test="positionId != null" >
        position_id,
      </if>
      <if test="homeAddressId != null" >
        home_address_id,
      </if>
      <if test="mailAddressId != null" >
        mail_address_id,
      </if>
      <if test="datetime != null" >
        datetime,
      </if>
      <if test="byWho != null" >
        by_who,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="universityId != null" >
        #{universityId,jdbcType=BIGINT},
      </if>
      <if test="empNo != null" >
        #{empNo,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="subdepartmentId != null" >
        #{subdepartmentId,jdbcType=BIGINT},
      </if>
      <if test="employHistoryId != null" >
        #{employHistoryId,jdbcType=BIGINT},
      </if>
      <if test="disciplineId != null" >
        #{disciplineId,jdbcType=BIGINT},
      </if>
      <if test="politicalId != null" >
        #{politicalId,jdbcType=BIGINT},
      </if>
      <if test="positionId != null" >
        #{positionId,jdbcType=BIGINT},
      </if>
      <if test="homeAddressId != null" >
        #{homeAddressId,jdbcType=BIGINT},
      </if>
      <if test="mailAddressId != null" >
        #{mailAddressId,jdbcType=BIGINT},
      </if>
      <if test="datetime != null" >
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null" >
        #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.uni.userBaseInfo1.bean.EmployeeExample" resultType="java.lang.Integer" >
    select count(*) from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update employee
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.universityId != null" >
        university_id = #{record.universityId,jdbcType=BIGINT},
      </if>
      <if test="record.empNo != null" >
        emp_no = #{record.empNo,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null" >
        department_id = #{record.departmentId,jdbcType=BIGINT},
      </if>
      <if test="record.subdepartmentId != null" >
        subdepartment_id = #{record.subdepartmentId,jdbcType=BIGINT},
      </if>
      <if test="record.employHistoryId != null" >
        employ_history_id = #{record.employHistoryId,jdbcType=BIGINT},
      </if>
      <if test="record.disciplineId != null" >
        discipline_id = #{record.disciplineId,jdbcType=BIGINT},
      </if>
      <if test="record.politicalId != null" >
        political_id = #{record.politicalId,jdbcType=BIGINT},
      </if>
      <if test="record.positionId != null" >
        position_id = #{record.positionId,jdbcType=BIGINT},
      </if>
      <if test="record.homeAddressId != null" >
        home_address_id = #{record.homeAddressId,jdbcType=BIGINT},
      </if>
      <if test="record.mailAddressId != null" >
        mail_address_id = #{record.mailAddressId,jdbcType=BIGINT},
      </if>
      <if test="record.datetime != null" >
        datetime = #{record.datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.byWho != null" >
        by_who = #{record.byWho,jdbcType=BIGINT},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update employee
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      university_id = #{record.universityId,jdbcType=BIGINT},
      emp_no = #{record.empNo,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=BIGINT},
      subdepartment_id = #{record.subdepartmentId,jdbcType=BIGINT},
      employ_history_id = #{record.employHistoryId,jdbcType=BIGINT},
      discipline_id = #{record.disciplineId,jdbcType=BIGINT},
      political_id = #{record.politicalId,jdbcType=BIGINT},
      position_id = #{record.positionId,jdbcType=BIGINT},
      home_address_id = #{record.homeAddressId,jdbcType=BIGINT},
      mail_address_id = #{record.mailAddressId,jdbcType=BIGINT},
      datetime = #{record.datetime,jdbcType=TIMESTAMP},
      by_who = #{record.byWho,jdbcType=BIGINT},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.uni.userBaseInfo1.bean.Employee" >
    update employee
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="universityId != null" >
        university_id = #{universityId,jdbcType=BIGINT},
      </if>
      <if test="empNo != null" >
        emp_no = #{empNo,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="subdepartmentId != null" >
        subdepartment_id = #{subdepartmentId,jdbcType=BIGINT},
      </if>
      <if test="employHistoryId != null" >
        employ_history_id = #{employHistoryId,jdbcType=BIGINT},
      </if>
      <if test="disciplineId != null" >
        discipline_id = #{disciplineId,jdbcType=BIGINT},
      </if>
      <if test="politicalId != null" >
        political_id = #{politicalId,jdbcType=BIGINT},
      </if>
      <if test="positionId != null" >
        position_id = #{positionId,jdbcType=BIGINT},
      </if>
      <if test="homeAddressId != null" >
        home_address_id = #{homeAddressId,jdbcType=BIGINT},
      </if>
      <if test="mailAddressId != null" >
        mail_address_id = #{mailAddressId,jdbcType=BIGINT},
      </if>
      <if test="datetime != null" >
        datetime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null" >
        by_who = #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.uni.userBaseInfo1.bean.Employee" >
    update employee
    set user_id = #{userId,jdbcType=BIGINT},
      university_id = #{universityId,jdbcType=BIGINT},
      emp_no = #{empNo,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=BIGINT},
      subdepartment_id = #{subdepartmentId,jdbcType=BIGINT},
      employ_history_id = #{employHistoryId,jdbcType=BIGINT},
      discipline_id = #{disciplineId,jdbcType=BIGINT},
      political_id = #{politicalId,jdbcType=BIGINT},
      position_id = #{positionId,jdbcType=BIGINT},
      home_address_id = #{homeAddressId,jdbcType=BIGINT},
      mail_address_id = #{mailAddressId,jdbcType=BIGINT},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      by_who = #{byWho,jdbcType=BIGINT},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>