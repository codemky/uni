<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.uni.place.mapper.FieldMapper">
  <resultMap id="BaseResultMap" type="edu.uni.place.bean.Field">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="university_id" jdbcType="BIGINT" property="universityId" />
    <result column="school_id" jdbcType="BIGINT" property="schoolId" />
    <result column="area_id" jdbcType="BIGINT" property="areaId" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="room" jdbcType="INTEGER" property="room" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="length" jdbcType="DOUBLE" property="length" />
    <result column="width" jdbcType="DOUBLE" property="width" />
    <result column="height" jdbcType="DOUBLE" property="height" />
    <result column="max_volumn" jdbcType="INTEGER" property="maxVolumn" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="in_out_door" jdbcType="INTEGER" property="inOutDoor" />
    <result column="datetime" jdbcType="TIMESTAMP" property="datetime" />
    <result column="by_who" jdbcType="BIGINT" property="byWho" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, university_id, school_id, area_id, level, room, name, length, width, height, 
    max_volumn, type_id, in_out_door, datetime, by_who, deleted
  </sql>
  <select id="selectByExample" parameterType="edu.uni.place.bean.FieldExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_field
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_field
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from p_field
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.uni.place.bean.FieldExample">
    delete from p_field
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.uni.place.bean.Field">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into p_field (university_id, school_id, area_id, 
      level, room, name, 
      length, width, height, 
      max_volumn, type_id, in_out_door, 
      datetime, by_who, deleted
      )
    values (#{universityId,jdbcType=BIGINT}, #{schoolId,jdbcType=BIGINT}, #{areaId,jdbcType=BIGINT}, 
      #{level,jdbcType=INTEGER}, #{room,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{length,jdbcType=DOUBLE}, #{width,jdbcType=DOUBLE}, #{height,jdbcType=DOUBLE}, 
      #{maxVolumn,jdbcType=INTEGER}, #{typeId,jdbcType=BIGINT}, #{inOutDoor,jdbcType=INTEGER}, 
      #{datetime,jdbcType=TIMESTAMP}, #{byWho,jdbcType=BIGINT}, #{deleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.uni.place.bean.Field">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into p_field
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="universityId != null">
        university_id,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="room != null">
        room,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="length != null">
        length,
      </if>
      <if test="width != null">
        width,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="maxVolumn != null">
        max_volumn,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="inOutDoor != null">
        in_out_door,
      </if>
      <if test="datetime != null">
        datetime,
      </if>
      <if test="byWho != null">
        by_who,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="universityId != null">
        #{universityId,jdbcType=BIGINT},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="room != null">
        #{room,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="length != null">
        #{length,jdbcType=DOUBLE},
      </if>
      <if test="width != null">
        #{width,jdbcType=DOUBLE},
      </if>
      <if test="height != null">
        #{height,jdbcType=DOUBLE},
      </if>
      <if test="maxVolumn != null">
        #{maxVolumn,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="inOutDoor != null">
        #{inOutDoor,jdbcType=INTEGER},
      </if>
      <if test="datetime != null">
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null">
        #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.uni.place.bean.FieldExample" resultType="java.lang.Long">
    select count(*) from p_field
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update p_field
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.universityId != null">
        university_id = #{record.universityId,jdbcType=BIGINT},
      </if>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=BIGINT},
      </if>
      <if test="record.areaId != null">
        area_id = #{record.areaId,jdbcType=BIGINT},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.room != null">
        room = #{record.room,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.length != null">
        length = #{record.length,jdbcType=DOUBLE},
      </if>
      <if test="record.width != null">
        width = #{record.width,jdbcType=DOUBLE},
      </if>
      <if test="record.height != null">
        height = #{record.height,jdbcType=DOUBLE},
      </if>
      <if test="record.maxVolumn != null">
        max_volumn = #{record.maxVolumn,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=BIGINT},
      </if>
      <if test="record.inOutDoor != null">
        in_out_door = #{record.inOutDoor,jdbcType=INTEGER},
      </if>
      <if test="record.datetime != null">
        datetime = #{record.datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.byWho != null">
        by_who = #{record.byWho,jdbcType=BIGINT},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update p_field
    set id = #{record.id,jdbcType=BIGINT},
      university_id = #{record.universityId,jdbcType=BIGINT},
      school_id = #{record.schoolId,jdbcType=BIGINT},
      area_id = #{record.areaId,jdbcType=BIGINT},
      level = #{record.level,jdbcType=INTEGER},
      room = #{record.room,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      length = #{record.length,jdbcType=DOUBLE},
      width = #{record.width,jdbcType=DOUBLE},
      height = #{record.height,jdbcType=DOUBLE},
      max_volumn = #{record.maxVolumn,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=BIGINT},
      in_out_door = #{record.inOutDoor,jdbcType=INTEGER},
      datetime = #{record.datetime,jdbcType=TIMESTAMP},
      by_who = #{record.byWho,jdbcType=BIGINT},
      deleted = #{record.deleted,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.uni.place.bean.Field">
    update p_field
    <set>
      <if test="universityId != null">
        university_id = #{universityId,jdbcType=BIGINT},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="room != null">
        room = #{room,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="length != null">
        length = #{length,jdbcType=DOUBLE},
      </if>
      <if test="width != null">
        width = #{width,jdbcType=DOUBLE},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=DOUBLE},
      </if>
      <if test="maxVolumn != null">
        max_volumn = #{maxVolumn,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="inOutDoor != null">
        in_out_door = #{inOutDoor,jdbcType=INTEGER},
      </if>
      <if test="datetime != null">
        datetime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null">
        by_who = #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.uni.place.bean.Field">
    update p_field
    set university_id = #{universityId,jdbcType=BIGINT},
      school_id = #{schoolId,jdbcType=BIGINT},
      area_id = #{areaId,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER},
      room = #{room,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      length = #{length,jdbcType=DOUBLE},
      width = #{width,jdbcType=DOUBLE},
      height = #{height,jdbcType=DOUBLE},
      max_volumn = #{maxVolumn,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=BIGINT},
      in_out_door = #{inOutDoor,jdbcType=INTEGER},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      by_who = #{byWho,jdbcType=BIGINT},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>